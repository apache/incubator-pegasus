# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
---
name: BuildPegasusRegularly - build pegasus and rdsn on different env every day

on:
  push:
    paths:
      - '.github/workflows/pegasus-regular-build.yml'

  # for manually triggering workflow
  workflow_dispatch:

  # run for every day 2am UTC+8(Beijing)
  schedule:
    - cron:  '0 18 */1 * *'

jobs:
  build_docker_images:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu1604
          - ubuntu1804
          - ubuntu2004
          - centos6
          - centos7
        compiler-family:
          - gcc
        include:
          - compiler-family: clang
            compiler: "clang-10,clang++-10"
            os: ubuntu2004
          - compiler-family: clang
            compiler: "clang-9,clang++-9"
            os: ubuntu1804
    container:
      image: apache/pegasus:thirdparties-bin-${{ matrix.os }}-${{ github.ref_name }}
    defaults:
      run:
        working-directory: /root/incubator-pegasus
    steps:
      - name: Clone Apache Pegasus Source
        working-directory: /root
        run: |
          git clone -b ${{ github.ref_name }} --depth=1 https://github.com/apache/incubator-pegasus.git
          cd incubator-pegasus
      - name: Unpack prebuilt third-parties
        run: unzip /root/thirdparties-bin.zip -d ./thirdparty
      - name: Compilation pegasus on GCC
        if: ${{ matrix.compiler-family == 'gcc' }}
        run: ./run.sh build -c --skip_thirdparty
      - name: Compilation pegasus on Clang
        if: ${{ matrix.compiler-family == 'clang' }}
        env:
          COMPILER: ${{ matrix.compiler }}
        run: ./run.sh build --compiler $COMPILER --skip_thirdparty
      - name: Packaging Server
        run: ./run.sh pack_server
