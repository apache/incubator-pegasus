; Licensed to the Apache Software Foundation (ASF) under one
; or more contributor license agreements.  See the NOTICE file
; distributed with this work for additional information
; regarding copyright ownership.  The ASF licenses this file
; to you under the Apache License, Version 2.0 (the
; "License"); you may not use this file except in compliance
; with the License.  You may obtain a copy of the License at
;
;   http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing,
; software distributed under the License is distributed on an
; "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
; KIND, either express or implied.  See the License for the
; specific language governing permissions and limitations
; under the License.
[apps..default]
run = true
count = 1
;network.client.RPC_CHANNEL_TCP = dsn::tools::sim_network_provider, 65536
;network.client.RPC_CHANNEL_UDP = dsn::tools::sim_network_provider, 65536
;network.server.0.RPC_CHANNEL_TCP = NET_HDR_DSN, dsn::tools::sim_network_provider, 65536

[apps.mimic]
type = dsn.app.mimic
arguments =
pools = THREAD_POOL_DEFAULT
run = true
count = 1

[core]
;tool = simulator
tool = nativerun
;tool = fastrun
;toollets = tracer
;toollets = tracer, profiler, fault_injector
pause_on_start = false
cli_local = false
cli_remote = false

start_nfs = false

logging_start_level = LOG_LEVEL_INFO
logging_factory_name = dsn::tools::simple_logger
;logging_factory_name = dsn::tools::screen_logger
;logging_factory_name = dsn::tools::hpc_logger
logging_flush_on_exit = true

enable_default_app_mimic = true

data_dir = ./pegasus_pressureClient.data

[tools.simple_logger]
short_header = true
fast_flush = false
max_number_of_log_files_on_disk = 100000
stderr_start_level = LOG_LEVEL_FATAL

[tools.hpc_logger]
per_thread_buffer_bytes = 8192
max_number_of_log_files_on_disk = 100000

[tools.simulator]
random_seed = 0

[network]
; how many network threads for network library(used by asio)
io_service_worker_count = 4

; specification for each thread pool
[threadpool..default]
worker_count = 4

[threadpool.THREAD_POOL_DEFAULT]
name = default
partitioned = false
max_input_queue_length = 1024
worker_priority = THREAD_xPRIORITY_NORMAL
worker_count = 3

[task..default]
is_trace = false
is_profile = false
allow_inline = false
rpc_call_channel = RPC_CHANNEL_TCP
rpc_call_header_format = NET_HDR_DSN
fast_execution_in_network_thread = false
rpc_timeout_milliseconds = 5000

[pressureclient]
;; generate hashkey between [0, hashkey_limit]
hashkey_limit = 10000
;; generate sortkey between [0, sortkey_limit]
sortkey_limit = 10000
;; *****_len is hashkey/sortkey/value's length, if hashkey/sortkey's length is bigger than ****_len
;; then, we just ignore ****_len
hashkey_len = 64
sortkey_len = 64
value_len  = 100
test_cluster_name = onebox
app_name = temp
;; operation name : set/get/del/scan
operation_name = set
;; operation's qps
qps = 1000

[pegasus.clusters]
onebox = @LOCAL_IP@:34601,@LOCAL_IP@:34602,@LOCAL_IP@:34603
mycluster = @LOCAL_IP@:34601,@LOCAL_IP@:34602,@LOCAL_IP@:34603
