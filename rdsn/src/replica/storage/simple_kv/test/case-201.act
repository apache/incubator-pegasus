# The MIT License (MIT)
#
# Copyright (c) 2015 Microsoft Corporation
#
# -=- Robust Distributed System Nucleus (rDSN) -=-
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# inject on_aio_call of primary log write

set:load_balance_for_test=1,not_exit_on_log_failure=1

# wait for server ready
config:{3,r1,[r2,r3]}
state:{{r1,pri,3,0},{r2,sec,3,0},{r3,sec,3,0}}

# begin write 1
client:begin_write:id=1,key=k1,value=v1,timeout=0

# inject aio error on primary
inject:on_aio_call:node=r1,task_code=LPC_WRITE_REPLICATION_LOG_PRIVATE

# error on r2
state:{{r1,err,3,0},{r2,sec,3,0},{r3,sec,3,0}}

# r1 drop it self
state:{{r2,sec,3,0},{r3,sec,3,0}}
config:{4,-,[r2,r3]}

# r2 become primary
state:{{r2,ina,4,0},{r3,sec,3,0}}
config:{5,r2,[r3]}
set:disable_load_balance=1

# commit write
state:{{r2,pri,5,1},{r3,sec,5,0}}

# client receive timeout (but data is already committed)
client:end_write:id=1,err=ERR_TIMEOUT,resp=0

set:disable_load_balance=0

# r1 recover
state:{{r1,sec,6,1},{r2,pri,6,1},{r3,sec,6,1}}

# begin read 1
client:begin_read:id=1,key=k1,timeout=0

# end read 1
client:end_read:id=1,err=err_ok,resp=v1

