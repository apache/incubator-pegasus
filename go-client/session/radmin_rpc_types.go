// Code generated by "generator -i=radmin.csv > radmin_rpc_types.go"; DO NOT EDIT.
package session

import (
	"context"
	"fmt"

	"github.com/XiaoMi/pegasus-go-client/idl/base"
	"github.com/XiaoMi/pegasus-go-client/idl/radmin"
)

// QueryDiskInfo is auto-generated
func (rs *ReplicaSession) QueryDiskInfo(ctx context.Context, req *radmin.QueryDiskInfoRequest) (*radmin.QueryDiskInfoResponse, error) {
	arg := radmin.NewReplicaClientQueryDiskInfoArgs()
	arg.Req = req
	result, err := rs.CallWithGpid(ctx, &base.Gpid{Appid: 0, PartitionIndex: 0}, 0, arg, "RPC_QUERY_DISK_INFO")
	if err == nil {
		ret, _ := result.(*radmin.ReplicaClientQueryDiskInfoResult)
		resp := ret.GetSuccess()
		if resp.GetErr().Errno != base.ERR_OK.String() {
			return resp, fmt.Errorf("QueryDiskInfo to session %s failed: %s", rs, resp.GetErr().String())
		}
		return resp, nil
	}
	return nil, err
}

// DiskMigrate is auto-generated
func (rs *ReplicaSession) DiskMigrate(ctx context.Context, req *radmin.ReplicaDiskMigrateRequest) (*radmin.ReplicaDiskMigrateResponse, error) {
	arg := radmin.NewReplicaClientDiskMigrateArgs()
	arg.Req = req
	result, err := rs.CallWithGpid(ctx, &base.Gpid{Appid: 0, PartitionIndex: 0}, 0, arg, "RPC_REPLICA_DISK_MIGRATE")
	if err == nil {
		ret, _ := result.(*radmin.ReplicaClientDiskMigrateResult)
		resp := ret.GetSuccess()
		if resp.GetErr().Errno != base.ERR_OK.String() {
			return resp, fmt.Errorf("DiskMigrate to session %s failed: %s", rs, resp.GetErr().String())
		}
		return resp, nil
	}
	return nil, err
}

// AddDisk is auto-generated
func (rs *ReplicaSession) AddDisk(ctx context.Context, req *radmin.AddNewDiskRequest) (*radmin.AddNewDiskResponse, error) {
	arg := radmin.NewReplicaClientAddDiskArgs()
	arg.Req = req
	result, err := rs.CallWithGpid(ctx, &base.Gpid{Appid: 0, PartitionIndex: 0}, 0, arg, "RPC_ADD_NEW_DISK")
	if err == nil {
		ret, _ := result.(*radmin.ReplicaClientAddDiskResult)
		resp := ret.GetSuccess()
		if resp.GetErr().Errno != base.ERR_OK.String() {
			return resp, fmt.Errorf("AddDisk to session %s failed: %s", rs, resp.GetErr().String())
		}
		return resp, nil
	}
	return nil, err
}
